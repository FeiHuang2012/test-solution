// export namespace org.hyperledger.composer.system{
   export interface Asset {
      $class?: string;
   }
   export interface Participant {
      $class?: string;
   }
   export interface Transaction {
      $class?: string;
      transactionId: string;
      timestamp: Date;
   }
   export interface Event {
      $class?: string;
      eventId: string;
      timestamp: Date;
   }
   export interface Registry extends Asset {
      $class?: string;
      registryId: string;
      name: string;
      type: string;
      system: boolean;
   }
   export interface AssetRegistry extends Registry {
      $class?: string;
   }
   export interface ParticipantRegistry extends Registry {
      $class?: string;
   }
   export interface TransactionRegistry extends Registry {
      $class?: string;
   }
   export interface Network extends Asset {
      $class?: string;
      networkId: string;
      runtimeVersion: string;
   }
   export interface NetworkAdmin extends Participant {
      $class?: string;
      participantId: string;
   }
   export interface HistorianRecord extends Asset {
      $class?: string;
      transactionId: string;
      transactionType: string;
      transactionInvoked: Transaction | string;
      participantInvoking: Participant | string;
      identityUsed: Identity | string;
      eventsEmitted?: Event[];
      transactionTimestamp: Date;
   }
   export interface RegistryTransaction extends Transaction {
      $class?: string;
      targetRegistry: Registry | string;
   }
   export interface AssetTransaction extends RegistryTransaction {
      $class?: string;
      resources: Asset[];
   }
   export interface ParticipantTransaction extends RegistryTransaction {
      $class?: string;
      resources: Participant[];
   }
   export interface AddAsset extends AssetTransaction {
      $class?: string;
      updateExisting?: boolean;
   }
   export interface UpdateAsset extends AssetTransaction {
      $class?: string;
   }
   export interface RemoveAsset extends AssetTransaction {
      $class?: string;
      resourceIds: string[];
   }
   export interface AddParticipant extends ParticipantTransaction {
      $class?: string;
      updateExisting?: boolean;
   }
   export interface UpdateParticipant extends ParticipantTransaction {
      $class?: string;
   }
   export interface RemoveParticipant extends ParticipantTransaction {
      $class?: string;
      resourceIds: string[];
   }
   export enum IdentityState {
      ISSUED,
      BOUND,
      ACTIVATED,
      REVOKED,
   }
   export interface Identity extends Asset {
      $class?: string;
      identityId: string;
      name: string;
      issuer: string;
      certificate: string;
      state: IdentityState;
      participant: Participant | string;
   }
   export interface IssueIdentity extends Transaction {
      $class?: string;
      participant: Participant | string;
      identityName: string;
   }
   export interface BindIdentity extends Transaction {
      $class?: string;
      participant: Participant | string;
      certificate: string;
   }
   export interface ActivateCurrentIdentity extends Transaction {
      $class?: string;
   }
   export interface RevokeIdentity extends Transaction {
      $class?: string;
      identity: Identity | string;
   }
   export interface StartBusinessNetwork extends Transaction {
      $class?: string;
      logLevel?: string;
      bootstrapTransactions?: Transaction[];
   }
   export interface ResetBusinessNetwork extends Transaction {
      $class?: string;
   }
   export interface SetLogLevel extends Transaction {
      $class?: string;
      newLogLevel: string;
   }
// }
