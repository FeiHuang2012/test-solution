import {Asset} from './org.hyperledger.composer.system';
import {Participant} from './org.hyperledger.composer.system';
import {Transaction} from './org.hyperledger.composer.system';
import {Event} from './org.hyperledger.composer.system';
// export namespace cn.gezhitech.tidemsc.model{
   export interface AddParticipant extends BaseTransaction {
      $class?: string;
      resources: User[];
   }
   export interface PartialUpdate extends BaseTransaction {
      $class?: string;
      resourceId: string;
      className: string;
      updatedFields: any;
   }
   export interface RemoveParticipant extends BaseTransaction {
      $class?: string;
      resourceIds: string[];
   }
   export interface AddAsset extends RegistryTransaction {
      $class?: string;
      resources: any;
      updateExisting?: boolean;
   }
   export interface JsonResponse {
      $class?: string;
      response: any;
   }
   export interface TransientTransaction extends BaseTransaction {
      $class?: string;
      payloadHash: string;
   }
   export interface UpdateAsset extends RegistryTransaction {
      $class?: string;
      resources: any;
   }
   export interface BaseTransaction extends Transaction {
      $class?: string;
   }
   export interface Identity extends Asset {
      $class?: string;
      identityId: string;
      name: string;
      issuer: string;
      certificate: string;
      participant: User | string;
   }
   export interface RemoveAsset extends RegistryTransaction {
      $class?: string;
      resourceIds: string[];
   }
   export interface Org extends Asset {
      $class?: string;
      affiliation: string;
      mspId: string;
      name: string;
      ancestorOrgs: Org[] | string[];
      fullyTrustedOrgs: Org[] | string[];
      roles?: string[];
      metadata?: any;
   }
   export interface EnableCacheTransaction extends BaseTransaction {
      $class?: string;
      enabled: boolean;
   }
   export interface UpdateParticipant extends BaseTransaction {
      $class?: string;
      resources: User[];
   }
   export interface CheckAclViolation extends BaseTransaction {
      $class?: string;
      userId: User | string;
      action: string;
      operation: string;
      resourcePointer?: string;
      newResource?: any;
   }
   export interface Find extends BaseTransaction {
      $class?: string;
      classNameWithNamespace: string;
      condition: string;
      parameters?: any;
      options?: any;
   }
   export interface RegistryTransaction extends BaseTransaction {
      $class?: string;
      targetRegistry: string;
   }
   export interface RevokeIdentity extends BaseTransaction {
      $class?: string;
      identity: Identity | string;
   }
   export interface ShowVersion extends BaseTransaction {
      $class?: string;
   }
   export interface InvokeMsc extends BaseTransaction {
      $class?: string;
      mscName: string;
      arguments: string[];
      channel?: string;
   }
   export interface User extends Participant {
      $class?: string;
      id: string;
      name: string;
      org: Org | string;
      roles: string[];
      internalName?: string;
      subRole?: string;
      metadata?: any;
   }
   export interface BindIdentity extends BaseTransaction {
      $class?: string;
      certificate: string;
      participant: User | string;
   }
   export interface QueryResponse {
      $class?: string;
      bookmark: string;
      queryResult: any;
   }
   export interface Config extends Asset {
      $class?: string;
      key: string;
      value: string;
   }
   export interface Invoke extends BaseTransaction {
      $class?: string;
      name: string;
      args: any;
   }
   export interface HistoryRecord {
      $class?: string;
      txId: string;
      value?: any;
      timestamp: Date;
      isDelete: boolean;
      number?: number;
      dataHash?: string;
      height: number;
      blockHash: string;
   }
// }
