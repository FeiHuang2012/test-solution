declare module '@gezhi/tide-process-common' {
  export class IndexBuilder {
    static buildIndex(instanceId: number, parentIndex?: string): string;

    static parseIndex(index: string, parentIndex: string): number;

    static isValid(index: string): boolean;
  }

  type LogFunc = (...message: any[]) => void;
  type LevelName = 'fetal' | 'error' | 'warn' | 'info' | 'debug';

  export interface TideProcessLogger {
    debug: LogFunc;
    info: LogFunc;
    warn: LogFunc;
    error: LogFunc;
    fetal: LogFunc;
    setLevel: (level: LevelName) => void;
    getLevel: () => LevelName;
    enter: (fcn: string) => void;
    exit: (fcn: string) => void;
  }

  export enum statusCode {
    BAD_REQUEST = 400,
    UNAUTHORIZED = 401,
    FORBIDDEN = 403,
    NOT_FOUND = 404,
    METHOD_NOT_ALLOWED = 405,
    INTERNAL_SERVER_ERROR = 500,
    NOT_IMPLEMENTED = 501,
  }

  export function getLogger(name: string, level?: LevelName): TideProcessLogger;

  export function setLoggingLevel(level: LevelName, selectors: string[]): void;

  export function getResponse(statusCode: statusCode, message?: string): string;
}
